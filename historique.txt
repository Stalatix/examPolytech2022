  147  docker version
  148  podman version
  149  docker pull docker/whalesay
  150  docker run docker/whalesay cowsay Hello INTECH
  151  docker run docker/whalesay cowsay Hello INTECH
  152  docker container ls -a
  153  docker run --name Yvette docker/whalesay cowsay Hello
  154  docker container ls -a
  155  whoami
  156  docker run --rm -it docker/whalesay sh
  157  top
  158  -docker run busybox sh -c "while true; do $(echo date); sleep 1; done"
  159  docker run busybox sh -c "while true; do $(echo date); sleep 1; done"
  160  docker run -d  busybox sh -c "while true; do $(echo date); sleep 1; done"
  161  docker logs nervous_germain
  162  docker logs wonderful_northcut
  163  docker logs wonderful_northcutt
  164  docker --tail 4 logs wonderful_northcutt
  165  docker logs --tail 4  wonderful_northcutt
  166  docker rm wonderful_northcutt
  167  docker stop wonderful_northcutt
  168  docker rm wonderful_northcutt
  169  docker image ls busybox
  170  more Dockerfile
  171  cd Documents/
  172  ls
  173  cd Mise en production de programme
  174  ls Mise_en_production_de_programme/
  175  cd Mise_en_production_de_programme/
  176  docker build --tag Hello-intech .
  177  docker build --tag hello-intech .
  178  more Dockerfile 
  179  touch Dockerfile
  180  vim Dockerfile 
  181  docker build --tag hello-intech .
  182  ls
  183  ls -l
  184  docker image ls
  185  docker run hello-intech
  186  vim Dockerfile 
  187  docker build --tag train .
  188  docker run hello-intech
  189  docker run train
  190  clear
  191  docker run train
  192  docker run train
  193  docker run train
  194  cd Documents/
  195  cd Progra_Full_Stack/
  196  ls
  197  cd Correction/
  198  cd back-main/
  199  nano Dockerfile 
  200  docker build Dockerfile 
  201  nano Dockerfile 
  202  docker build -t back .
  203  nano Dockerfile 
  204  docker build -t back .
  205  docker run --rm - it -v myVolume/tmp busybox
  206  docker run --rm -it -v myVolume:/tmp busybox
  207  docker run train
  208  clear
  209  ls
  210  cd Documents/
  211  cd Mise_en_production_de_programme/
  212  cd ..
  213  ls
  214  cd Progra_Full_Stack/
  215  ls
  216  cd Correction/
  217  ls
  218  cd back-main/
  219  ls
  220  nano Dockerfile 
  221  ls
  222  cd Dockerfile
  223  nano Dockerfile 
  224  cd ..
  225  cd back-main/
  226  cd target/
  227  nano toto.jar 
  228  cd ..
  229  nano Dockerfile
  230  docker build -t back:2.0 .
  231  nano Dockerfile
  232  docker build -t back:2.0 .
  233  nano Dockerfile
  234  docker build -t back:2.0 .
  235  nano Dockerfile
  236  nano Dockerfile
  237  docker build -t back:2.0 .
  238  docker run --rm back:2.0
  239  nano Dockerfile
  240  docker build -t back:2.0 .
  241  docker run --rm back:2.0
  242  docker run --rm postgres:14
  243  docker run --rm -e POSTGRES_PASSWORD=password
  244  docker run --rm -e POSTGRES_PASSWORD=password postgres:14
  245  docker run -d --env POSTGRES_DB=myDatabase --env POSTGRES_USER=databaseUser --env POSTGRES_PASSWORD=databasePassword postgres:14
  246  docker container ls
  247  docker exec -it zealous_ride bash
  248  docker inspect zealous_ride
  249  docker container --rm zaelous_rida
  250  docker container --rm zaelous_ride
  251  docker --rm zaelous_ride
  252  docker container rm -f  zaelous_ride
  253  docker container rm -f  zealous_ride
  254  docker run -d -p 5432:5432 --env POSTGRES_DB=myDatabase --env POSTGRES_USER=databaseUser --env POSTGRES_PASSWORD=databasePassword postgres:14
  255  docker container ls
  256  docker container ls-a
  257  docker container ls -a
  258  netstat -tulnp
  259  netstat -tuln
  260  netstat -tunlp
  261  netstat -tunl
  262  docker run -d -p 5433:5432 --env POSTGRES_DB=myDatabase --env POSTGRES_USER=databaseUser --env POSTGRES_PASSWORD=databasePassword postgres:14
  263  nano Dockerfile
  264  docker container ls
  265  docker container rm -f  compassionate_brown
  266  docker run -d -p 5433:5432 --env POSTGRES_DB=myDatabase --env POSTGRES_USER=databaseUser --env POSTGRES_PASSWORD=databasePassword postgres:14
  267  docker run -d -p 8080:8080 --env SPRING_DATASOURCE_URL = jdbc:postgresql://host.docker.internal5433/myDatabase --env SPRING_DATASOURCE_USERNAME=databaseUser --env SPRING_DATASOURCE_PASSWORD=mypassword postgres:14
  268  docker run -d -p 8080:8080 --env SPRING_DATASOURCE_URL = jdbc:postgresql://host.docker.internal:5433/myDatabase --env SPRING_DATASOURCE_USERNAME=databaseUser --env SPRING_DATASOURCE_PASSWORD=mypassword postgres:14
  269  docker run -d -p 8080:8080 --env SPRING_DATASOURCE_URL = jdbc:postgresql://host.docker.internal:5433/myDatabase --env SPRING_DATASOURCE_USERNAME=databaseUser --env SPRING_DATASOURCE_PASSWORD=databasepassword back:2.0
  270  docker run -d -p 8080:8080 --env SPRING_DATASOURCE_URL="jdbc:postgresql://host.docker.internal:5433/myDatabase" --env SPRING_DATASOURCE_USERNAME=databaseUser --env SPRING_DATASOURCE_PASSWORD=databasepassword back:2.0
  271  docker container ls
  272  docker container ls -a
  273  docker logs f70010214eda
  274  docker run -d -p 8080:8080 --env SPRING_DATASOURCE_URL="jdbc:postgresql://host.docker.internal:5433/myDatabase" --env SPRING_DATASOURCE_USERNAME=databaseUser --env SPRING_DATASOURCE_PASSWORD=databasePassword back:2.0
  275  docker container ls
  276  docker container ls
  277  curl localhost:8080/restaurants
  278  ls
  279  nano Polytech
  280  docker run --rm -it -v 
  281  whereiam
  282  pwd
  283  docker run --rm -it -v $PWD/Polytech:/tmp/Polytech busybox sh
  284  nano Polytech
  285  docker run --rm -it -v $PWD/Polytech:/tmp/Polytech busybox sh
  286  docker volume create myVolume
  287  docker inspect Myvolume
  288  docker inspect myVolume
  289  docker volume ls 
  290  docker run --rm -it -v myVolume:/tmp busybox
  291  docker network create myNetwork
  292  cd Documents/
  293  cd Mise_en_production_de_programme/
  294  docker network create myNetwork
  295  docker network create myNetwork
  296  docker run --name c1 -it busybox sh
  297  docker run --name c2 -it --network myNetwork busybox sh
  298  docker volume ls
  299  cd Documents/
  300  cd Progra_Full_Stack/
  301  ls
  302  cd Correc
  303  cd Correction/
  304  cd back-main/
  305  nano Dockerfile
  306  cd ..
  307  cd front-main/
  308  ls
  309  cd Dockerfile 
  310  nano Dockerfile 
  311  cd ..
  312  ls
  313  touch docker-compose.yml
  314  nano docker-compose.yml 
  315  docker volumes ls 
  316  docker volume ls 
  317  docker volume rm myVolume postgres
  318  ls
  319  docker-compose
  320  docker-compose up
  321  nano docker-compose.yml 
  322  docker-compose up
  323  nano docker-compose.yml 
  324  docker-compose up
  325  nano docker-compose.yml 
  326  docker-compose up
  327  docker-compose up -d
  328  nano docker-compose.yml 
  329  docker-compose up -d
  330  nano docker-compose.yml 
  331  nano docker-compose.yml 
  332  docker-compose up -d
  333  nano docker-compose.yml 
  334  docker-compose up -d
  335  nano docker-compose.yml 
  336  docker-compose up -d
  337  nano docker-compose.yml 
  338  docker-compose up -d
  339  nano docker-compose.yml 
  340  docker-compose up -d
  341  docker-compose up -d
  342  docker network connect myNetwork c1
  343  docker run --name c1 -it --network myNetwork busybox sh
  344  docker run --name c1 -it --network myNetwork busybox sh
  345  docker volume create postgres
  346  docker network create backend
  347  docker run --name postgres -d --env POSTGRES_DB=myDatabase --env POSTGRES_USER=databaseUser --env POSTGRES_PASSWORD=databasePassword --volume postgres:/var/lib/postgresql/data:rw --network backend postgres:14
  348  docker run --name backend -d -p 8080:8080 --env SPRING_DATASOURCE_URL="jdbc:postgresql://postgres:5432/myDatabase" --env SPRING_DATASOURCE_USERNAME=databaseUser --env SPRING_DATASOURCE_PASSWORD=databasePassword --network backend back:2.0
  349  ls
  350  cd Documents/
  351  cd Progra_Full_Stack/
  352  ls
  353  cd Correction/
  354  ls 
  355  cd front-main/
  356  ls
  357  nano Dockerfile
  358  `cd ..
  359  nano Dockerfile
  360  nano Dockerfile
  361  touch entrypoint.sh
  362  ls
  363  nano entrypoint.sh 
  364  nano entrypoint.sh 
  365  nano Dockerfile
  366  docker build -t front:1.0
  367  docker build -t front:1.0 .
  368  nano Dockerfile
  369  docker build -t front:1.0 .
  370  nano Dockerfile
  371  docker build -t front:1.0 .
  372  ls
  373  rm package-lock.json 
  374  ls
  375  docker build -t front:1.0 .
  376  nano Dockerfile 
  377  docker build -t front:1.0 .
  378  nano Dockerfile
  379  docker build -t front:1.0 .
  380  docker run --name frontend -d -p 4200:4200 --env BACKEND_URL_ENV_VAR="localhost:8080" front:1.0
  381  docker logs
  382  docker logs frontend
  383  nano Dockerfile 
  384  ls
  385  docker build -t front:1.0 .
  386  docker logs frontend
  387  docker run --rm -it front:1.0 sh
  388  docker run --rm -it --entrypoint="" front:1.0 sh
  389  vi entrypoint.sh 
  390  docker run --rm -it front:1.0 sh
  391  docker build -t front:1.0 .
  392  docker run --name frontend -d -p 4200:4200 --env BACKEND_URL_ENV_VAR="localhost:8080" front:1.0
  393  docker run --name frontend -d -p 4200:4200 --env BACKEND_URL_ENV_VAR="localhost:8080" front:1.0
  394  docker run --name frontend -d -p 4200:4200 --env BACKEND_URL_ENV_VAR="localhost:8080" front:1.0
  395  docker build -t front:1.0 .
  396  docker run --name frontend -d -p 4200:4200 --env BACKEND_URL_ENV_VAR="localhost:8080" front:1.0
  397  docker logs frontend
  398  cd Documents/Progra_Full_Stack/Correction/front-main/
  399  ls
  400  nano Dockerfile 
  401  nano Dockerfile 
  402  nano Dockerfile 
  403  ls
  404  cd ..
  405  ls
  406  docker compose build
  407  docker compose up -d postgres
  408  docker compose up
  409  docker login public.ecr.aws/u1k0q0r7 --username AWS --password "eyJwYXlsb2FkIjoiL2dNM3RqalRteEtBNXZTVGhVMEhxRUY2QzQ3N0VtOWFQUFVJSnZEWlBOd1drZzJXalRwZWV6OXVxQmJMUUs5YnB0SkZ1S1hlVlVWVURkM0c3Mm0wS2drS0RvczVVVzNDYSsrTmEzUktoVTc5bFBkWm1CQW9BYUdhN3dxMThleDlLQTVvMjh0U3htdGdoRERBRzZMN1JGM1RFZDhpaGFDNExpVFBsemRFSjJaZjN6cmwxSktLL1VxblRkVTI4SWhYcHNRY3lDK2xTVUFQcWUvWjl1TlNnMkNHRm1WeWxYMlJITnFqaDFnSlZvSUd2V0N4US96Y2xVdXFESkticWtaYjR4WUhrdjFpaUlaTmg3R3IwVmoyWmhZRk1VODZMRlNVak5iWXhLMzc3VklmditIZ3VSQ2NGQ05TanN1YjNiMzB0dXFVdVczb29KekpqNDFGcW1IakUyTEhZV1B2Zkd0NzlYeGE4ODFkdDVqazk2UjE4T29IZjFuOVhPZWRucDFKL0V4Z1g4aC95RlRiRUo5cmhGZlpQeTZ1UDdUOGZLZlRnMmQwNzQrV01ONWFLbEpwR215eVI4MU1PUmtGYm9WK2tHMmhDeVNmZGFtRVMzVmJpRjZmejl5UjFzNDdhOTJ6M3VyaGVLTk9lcWZ3T2lVb2RWWW9TVTYwckJtbzlKWGVpRlM2RTRHMlpIK2pVTjh0YmZaVDducXlxcG9vRndDSVliN1dRTXdhZXA3TFNObXJZY0w2VHUyb2VTYUJqSndnVjFpSzNzTEJxMVc3SkhQNXNjMjRJRWZjMHV0NG5NLy9EZHlOZnU3cHp3RHl0dks3YzJrNmsveHJYK3ZLaWd6QUJhL2xvUFduMzR5bkxEaHdDUHhFTGFnMm9FM0pvTzJBY0ZnOHB4NHRoTmsxcTVOYVMzU1VISncvMmo3MWtOS09rSXNsM1p1TnBWS3J5bHlGb0ZlSUt3ampHUEFIL3NRU1FNaXJIQlVrVVRMVlpkclM4T003empwVlpjUG1xODAwbGtvVmxYMEhvZHZkQmhFb0loOW5za0YwbnJSNDZEc0VaQ3BFc1M1WUYxMU1EQmIvZFN2angyNmZ4aXZLVmFPMHlyeTBOb0ZKaEY4Qll2STcwOWJ0c3QvbE5Edkk0SU9IaytNdjVhTXordTdpMXRWMDQ4UGlIV1k2M3F1NjlvcjJJV0ptb3E1ZGVwbFl3UkpKU2E0ZEQ5M3RRd1FVT0luV0FzODhFT2hoWXBCUDRrZjg2dnEvRU5JUzdTdG50akhzWFo5cmtHL2xNaHV1Z0FLa1A5MU85dE9kVEZHZUgyY3RvZz09IiwiZGF0YWtleSI6IkFRSUJBSGpXWHc2WlNzZUNkQWwrTm9kRll3Zi9oUm1zTEEybmdhNUJCZnZia1BuT2J3RkhDSWVHdDNoTnU4OU5GQldZVy9hWEFBQUFmakI4QmdrcWhraUc5dzBCQndhZ2J6QnRBZ0VBTUdnR0NTcUdTSWIzRFFFSEFUQWVCZ2xnaGtnQlpRTUVBUzR3RVFRTUVmcTc5czVZR2dMbUhySDhBZ0VRZ0R2MGc2eG5NMU1JY2E0aC9qY1hCNlBEWTNPNlQ1SFBrc1BUOVV0aHNwallnUFlLd0VDNXdCcEJselV6T1kvT01nQjlzV3ZrQ0FML296cDdvQT09IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNjY5ODQ1ODQ1fQ=="
  410  docker image ls 
  411  docker tag 6f5de4a9512a public.ecr.aws/u1k0q0r7/front:emilien
  412  docker tag 9a364a1f45a3 public.ecr.aws/u1k0q0r7/back:emilien
  413  docker image ls 
  414  docker push public.ecr.aws/u1k0q0r7/back:emilien
  415  docker push public.ecr.aws/u1k0q0r7/front:emilien
  416  docker pull public.ecr.aws/u1k0q0r7/front:guillaumefront
  417  docker image ls
  418  docker rm 3300f9d8c8a7
  419  docker image rm 3300f9d8c8a7
  420  ls
  421  cd back-main/
  422  git init
  423  git add .
  424  git comit -a "first_commit"
  425  git commit -a "first_commit"
  426  git commit -m "first_commit"
  427  git push -u origin main
  428  git remote add origin https://github.com/Stalatix/test.git
  429  git push -u origin main
  430  git push -u origin main
  431  git push -u origin main
  432  git push -u origin main
  433  ls
  434  cd Documents/
  435  cd Mise_en_production_de_programme/
  436  ls
  437  cd..
  438  ls
  439  cd ..
  440  cd Progra_Full_Stack/
  441  cd Correction/
  442  cd front-main/
  443  ls
  444  ls
  445  nano Dockerfile 
  446  cd ..
  447  ls
  448  nano docker-compose.yml 
  449  docker compose build
  450  ls
  451  docker-compose build
  452  docker compose build
  453  ls
  454  d
  455  docker-compose build  
  456  nano docker-compose.yml
  457  vi docker-compose.yml 
  458  ls
  459  docker compose build  
  460  vi docker-compose.yml 
  461  docker compose build  
  462  docker compose build  
  463  docker compose build  
  464  docker-compose up -d
  465  docker-compose up -d postgres
  466  docker-compose up -d
  467  docker-compose up -d
  468  nano docker-compose.yml 
  469  cd front-main/
  470  ls
  471  nano Dockerfile 
  472  cd ..
  473  nano docker-compose.yml
  474  docker-compose up -d
  475  docker compose logs
  476  docker-compose down
  477  docker-compose up -d postgres
  478  docker-compose up
  479  docker-compose up -d postgres
  480  docker-compose up
  481  docker-compose down
  482  docker compose build  
  483  docker-compose up -d postgres
  484  docker-compose up
  485  docker-compose down
  486  docker compose build  
  487  docker-compose up -d postgres
  488  docker-compose up
  489  docker-compose down
  490  docker compose build  
  491  touch .env
  492  nano .env
  493  docker compose -f docker-compose2.yml up
  494  ls
  495  docker compose -f docker-compose 2.yml up
  496  docker compose -f docker-compose2.yml up
  497  nano .env
  498  docker compose -f docker-compose2.yml up
  499  cd Do
  500  cd Documents/
  501  cd Mise_en_production_de_programme/
  502  cd Evaluation/
  503  ls
  504  docker-compose up -d
  505  docker volume create mysqm
  506  docker volume create mysql
  507  docker-compose build
  508  docker-compose up -d
  509  dokcer-compose logs
  510  docker-compose logs
  511  docker-compose build
  512  docker-compose up -d
  513  docker-compose logs
  514  docker-compose build
  515  docker-compose up -d
  516  docker-compose logs
  517  docker-compose up -d
  518  docker-compose logs
  519  docker-compose build
  520  docker-compose up -d
  521  docker-compose logs
  522  docker-compose logs
  523  : docker build --tag Eval:1.0
  524  cd java/
  525  : docker build --tag Eval:1.0
  526  : docker run Eval:1.0 -d
  527  : docker run Eval:1.0
  528  docker ls
  529  docker image ls
  530  : docker build --tag Eval:1.0
  531  docker build --tag Eval:1.0
  532  docker build --tag eval:1.0
  533  docker build --tag eval:1
  534  docker build --tag eval
  535  ls
  536  docker build --tag eval
  537  docker build -t eval
  538  docker build --help
  539  docker build . -t eval:1.0
  540  : docker run eval:1.0
  541  docker run eval:1.0 -d
  542  docker run eval:1.0
  543  cd ..
  544  ls
  545  docker-compose build
  546  docker network ls
  547  docker network rm backend
  548  docker-compose build
  549  docker-compose build
  550  docker-compose build
  551  docker-compose build
  552  docker-compose up
  553  docker-compose build
  554  docker-compose up
  555  docker-compose build
  556  docker-compose up
  557  docker-compose build
  558  docker-compose up
  559  docker-compose mysql up -d
  560  docker-compose up mysql -d
  561  docker-compose up backend
  562  docker-compose build
  563  docker-compose up
  564  docker-compose up mysql -d
  565  docker-compose up backend
  566  docker-compose build
  567  docker-compose up mysql -d
  568  docker-compose up
  569  docker-compose down --volumes
  570  docker-compose up
  571  docker-compose up
  572  docker-compose up mysql -d
  573  docker-compose up -d
  574  docker-compose down
  575  docker-compose up mysql -d
  576  ls
  577  ls
  578  docker-compose build
  579  docker-compose build
  580  docker-compose build
  581  docker-compose build
  582  ls
  583  cd angular/
  584  nano sed.sh 
  585  ls
  586  cd ..
  587  docker-compose build
  588  docker-compose build
  589  docker-compose build
  590  docker-compose up mysql -d
  591  docker-compose up -d
  592  docker-compose log
  593  docker-compose logs
  594* 
  595  docker-compose logs frontend
  596  docker-compose build
  597  docker-compose up mysql -d
  598  docker-compose up -d
  599  docker-compose logs frontend
  600  docker-compose up -d
  601  docker-compose logs frontend
  602  docker-compose down
  603  docker-compose up mysql -d
  604  docker-compose up -d
  605  docker-compose logs frontend
  606  docker-compose down
  607  ls
  608  docker-compose build --no-cache frontend
  609  docker-compose up mysql -d
  610  docker-compose up -d
  611  docker-compose logs frontend
  612  docker-compose build --no-cache frontend
  613  docker-compose down
  614  docker-compose up mysql -d
  615  docker-compose up -d
  616  docker-compose down
  617  docker-compose up mysql -d
  618  docker-compose down
  619  docker-compose build
  620  docker-compose up mysql -d
  621  docker-compose up -d
  622  docker-compose down
  623  docker-compose build
  624  docker-compose up mysql -d
  625  docker-compose up -d
  626  docker-compose down
  627  docker-compose up mysql -d
  628  docker-compose up -d
  629  docker image ls
  630  docker login --username AWS --password "eyJwYXlsb2FkIjoic3JCRDRUYUV5RzNQOEFieHl4cXNFSzl2bkIvSjh2dTNFYnVnd3d1bFBPVHN4N0NjcFJOV0dmaDFqb3FzU2hYdWh4S1pSc1dveWYyTkEyazdlNkxqbm5UWXB4NTkxN1RyRWZ4bVU1VjY5ZzJmczl4K0xhdUpnVSswMXJ3Vm9Xank0c0dQZEpFKzdDWTNxSnZIOXJkTGZRbGdDOFptWGxmSzNkZXk2N1RtblpSNFpjSjJoZDBnSTdSRGpReXhqYmJScCtHMVM1clVPYnpBdWdHZXRJL09iZitjaldLNG1zN3ZLczl5QlFxbnNWVWxQbXFSUVJoSzQ3M3czbEJ6Mzh6dVU4N1RFdE8rdng0QzBYamthakM1S2VqcFRVV2JMUmtlSDBIVkphSjFvZ3VkY0FzS0FPY2dOQ0NtRngzM21KMFlLU21jeXpBdHBTU2hjODEvKyt4bmNZRVdMTjY5cHBRcnBKMzVXSUprY1o5ZDBibWpBSlAvbVZObGFGTXpTdFVKMFBpbGxwWnE4K2dIYVpoKzF6QlJ4OGNJNGI4aE5HajVnU1hYelpZTlh6MTFZVU9Ga0VSdmlBUDdzdjRuNDhvTmh5bExDMzlDaUJxbzJ2TUtnMGdVRWFHdTJhaXpOUTYvYkxhd3J3R3NhY3oxNTNnYkpodmt4aWlqdDNHNkFWakh3b3d4cUNpOEtnYUg5OWtIMVUwK1ZRM2ZWL1Fjc29KOHljbzRSd0NtSGxDcHdoWDU4WmpaaEE3djBoMmFJNzFvVHppUkN1Y0QrdmNraXYvUHpZOG10aVNXWU5NMlN2T1lQbyt5VFBOWWkvc1o2blh3U0xsZExwZDVlQ1ZQR2d3VWRMenJvcnJHWktYZmpQZ2RqdzluOVNxNzFac3UrdmgwaVRJeTZ6dmtuNnB4Vm44dkNQK0l1Y2pCSEttNEgreGpVQzgrQUFzUXFxVFJ0Nlp6NGxzNlVZcTFvSmhSd3BXV1d2K1B3dnNYV2tVQmhTKzgwTEN6MmcvWW80eEV1cUZIbXVaNjgxa1U3d08yRCt6cXRxN2p3NzFPNkVOZTBBOVVNeTdDVk1kQUZCMDAwbEpnVlBTb2NoeXJ6UU1YL050VkgwOHRtZXZFOW5zeDU4aVhVaE5WalhSdXpFd216bzF6VjJpS1RXejYrZHFzdHQ3aER2QVp0Y2gxa3dVSVhGc3Y3ZUhFeDdxOVZnV2dLalBBK0x2Q1BuTUdoRTRLRXpuSEVaalZJcjd1b0xmdm9hMTNxZjZPcnVybW5xeE9xVzFrYktqRDNTaGFVb2QvS2x0d25HM3RMbzliekxIdk1NQmN2Zz09IiwiZGF0YWtleSI6IkFRSUJBSGpXWHc2WlNzZUNkQWwrTm9kRll3Zi9oUm1zTEEybmdhNUJCZnZia1BuT2J3RmtnUUdtU1F4djMyQ2liNnJpaHhJRkFBQUFmakI4QmdrcWhraUc5dzBCQndhZ2J6QnRBZ0VBTUdnR0NTcUdTSWIzRFFFSEFUQWVCZ2xnaGtnQlpRTUVBUzR3RVFRTTRVcGFGejd5YmU3V1VlSElBZ0VRZ0R2cmQ5TEx0SzY5enhiSXJLajVpZDFxcllYb1VML3VOSXNDejFKQ0JMNHJXREh5L0w5YVo0M01MTit1bFRMY09mVlh2UkhWcDA4cnhqUVBYdz09IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNjcwNjQ2MjU1fQ==" public.ecr.aws/u1k0q0r7
  631  docker tag 4277d5e5c7c1 public.ecr.aws/u1k0q0r7/front:emilien
  632  docker tag a11534b6da08 public.ecr.aws/u1k0q0r7/front:emilien
  633  docker tag a11534b6da08 public.ecr.aws/u1k0q0r7/back:emilien
  634  docker push public.ecr.aws/u1k0q0r7/front:emilien
  635  docker tag a11534b6da08 public.ecr.aws/u1k0q0r7/front:emilien
  636  docker tag a11534b6da08 public.ecr.aws/u1k0q0r7/back:emilien
  637  docker tag 4277d5e5c7c1 public.ecr.aws/u1k0q0r7/front:emilien
  638  docker push public.ecr.aws/u1k0q0r7/front:emilien
  639  docker image ls
  640  docker tag a11534b6da08 public.ecr.aws/u1k0q0r7/back:emilien
  641  docker tag a11534b6da08 public.ecr.aws/u1k0q0r7/java:emilien
  642  docker tag 4277d5e5c7c1 public.ecr.aws/u1k0q0r7/angular:emilien
  643  docker push public.ecr.aws/u1k0q0r7/java:emilien
  644  docker push public.ecr.aws/u1k0q0r7/angular:emilien
  645  history
  646  history > historique.txt
